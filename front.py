import streamlit as st
import requests
from PIL import Image
import io

# url to use to test the deployed container
# API_URL = "https://fake-news-image-863060191445.europe-west1.run.app/predict"

# url to use for local testing
API_URL = "http://localhost:8081/predict"

st.title("Fake image check")
st.header("Check here if an image is generated by AI.")
st.write("As a first step of the challenge, we can get a score here that indicates if an image is generated by an AI. The model has been trained on a dataset from Kaggle (https://www.kaggle.com/datasets/tristanzhang32/ai-generated-images-vs-real-images/data) composed by 12 000 images. Half are fakes, the other half are real ones.  ")
uploaded_file = st.file_uploader("Choose an image", type=["jpg", "jpeg", "png", "gif"])

if uploaded_file is not None:
    st.write(f"Uploaded file type: {uploaded_file.type}")

    image = Image.open(uploaded_file)
    st.image(image, caption='Uploaded Image', use_column_width=True)

    img_bytes = io.BytesIO()
    image.save(img_bytes, format='PNG')
    img_bytes = img_bytes.getvalue()

    if st.button("Predict"):

        response = requests.post(API_URL, files={"file": ("image.png", img_bytes, "image/png")})

        if response.status_code == 200:
            prediction = response.json().get("prediction")
            predicted_class = response.json().get("predicted_class")
            #if predicted_class == 0:
            #    st.success(f"This image seems to be fake 🤖⚙️🤖")
            #else:
            #    st.success(f"This image seems to be real 👍🏻")
            if prediction[0] < 0.1:
                st.success(f"This image seems to be fake 🤖⚙️🤖")
            else:
                st.success(f"This image seems to be real 👍🏻")
            st.write(f"Reality score: {prediction[0]*100:.2f}%")
            st.write("The higher is this score, the more you can be confident that the image has not been generated by AI.")
        else:
            st.error(f"Failed to get prediction. Status code: {response.status_code}")
            st.write(response.text)
